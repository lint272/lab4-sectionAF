# Exercise 7: DPLYR practice with NBA data
# install.packages("dplyr")
library(dplyr)
install.packages(dyplr)
install.packages("dyplr")
# Exercise 7: DPLYR practice with NBA data
# install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
# Read in the NBA team data of the 2016-2017 season from the data directory
# into a variable called `team.data` using `read.csv`
team.data <- read.csv("data/teams.csv", stringsAsFactors = FALSE)
setwd("C:/Users/robert.lin/Desktop/AU18/INFO/lab/lab4-sectionAF")
# Read in the NBA team data of the 2016-2017 season from the data directory
# into a variable called `team.data` using `read.csv`
team.data <- read.csv("data/teams.csv", stringsAsFactors = FALSE)
# The data.frame team.data should now be accessible to you.
# View it, and get some basic information about the number of rows/columns.
# Note the "X" preceding some of the column titles as well as the "*"
# following the names of teams that made it to the playoffs that year.
View(team.data)
# Add a column that gives the turnovers to steals ratio (TOV / STL) for each team
team.data <- mutate(team.data, TOV_STL = TOV / STL)
# Exercise 7: DPLYR practice with NBA data
# install.packages("dplyr")
library(dplyr)
# Exercise 7: DPLYR practice with NBA data
# install.packages("dplyr")
library(dplyr)
# Exercise 7: DPLYR practice with NBA data
install.packages("dplyr")
getwd()
# Exercise 7: DPLYR practice with NBA data
#install.packages("dplyr")
library(dplyr)
# Add a column that gives the turnovers to steals ratio (TOV / STL) for each team
team.data <- mutate(team.data, TOV_STL = TOV / STL)
# Sort the teams from lowest turnover/steal ratio to highest
sorted_team <- arrange(TOV_STL)
# Sort the teams from lowest turnover/steal ratio to highest
sorted_team <- arrange(team.data, TOV_STL)
#Find the average BLK and STL for teams having a TOV greater than the average TOV of all teams
greater <- filter(team.data, TOV > mean(TOV))
View(greater)
mean(TOV)
summarize(team.data, mean(TOV))
avg1 <- summarise(greater, mean(BLK), mean(STL))
View(avg1)
avg2 <- summarise(filter(team.data, TOV > mean(TOV)), mean(BLK), mean(STL))
View(avg2)
avg2 <- summarise(
filter(
team.data, TOV > mean(TOV)
),
mean(BLK),
mean(STL)
)
# Get the team that had the highest Total Rebounds (TRB) only with the columns
# Team and TRB  *using one line of code*
select((team.data, max(TRB)), Team, TRB)
# Get the team that had the highest Total Rebounds (TRB) only with the columns
# Team and TRB  *using one line of code*
select(filter(team.data, max(TRB)), Team, TRB)
# Get the team that had the highest Total Rebounds (TRB) only with the columns
# Team and TRB  *using one line of code*
select(filter(team.data, TRB = max(TRB)), Team, TRB)
# Get the team that had the highest Total Rebounds (TRB) only with the columns
# Team and TRB  *using one line of code*
select(filter(team.data, TRB += max(TRB)), Team, TRB)
# Get the team that had the highest Total Rebounds (TRB) only with the columns
# Team and TRB  *using one line of code*
select(filter(team.data, TRB == max(TRB)), Team, TRB)
# Print only the name of the team that had the highest total rebounds
# (that also happens to be the greatest team of all time)
print(select(filter(team.data, TRB == max(TRB)), Team, TRB), Team)
# Print only the name of the team that had the highest total rebounds
# (that also happens to be the greatest team of all time)
print(select(filter(team.data, TRB == max(TRB)), Team, TRB), "Team")
# Print only the name of the team that had the highest total rebounds
# (that also happens to be the greatest team of all time)
print(team.data, Team)
# Print only the name of the team that had the highest total rebounds
# (that also happens to be the greatest team of all time)
select(select(filter(team.data, TRB == max(TRB)), Team, TRB), Team)
# Read in the Pokemon data from the data directory
# into a variable called `pokemon` using `read.csv`. Remember to not read strings in as factors.
pokemon <- read.csv("data/Pokemon.csv")
# First, View() the data set to see what info you have to work with
View(pokemon)
